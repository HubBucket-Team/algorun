{
   	"manifest_version": "1.3",
	"algo_name": "Bowtie2", // the name of your algorithm
	"algo_summary": "Bowtie2 is a Fast and sensitive read alignment", // a 1-line summary of your algorithm
	"algo_description": "Bowtie 2 is an ultrafast and memory-efficient tool for aligning sequencing reads to long reference sequences. It is particularly good at aligning reads of about 50 up to 100s or 1,000s of characters, and particularly good at aligning to relatively long (e.g. mammalian) genomes. Bowtie 2 indexes the genome with an FM Index to keep its memory footprint small: for the human genome, its memory footprint is typically around 3.2 GB. Bowtie 2 supports gapped, local, and paired-end alignment modes.", // a few lines description of your algorithm (basic html accepted)
	"algo_website": "http://bowtie-bio.sourceforge.net/bowtie2/index.shtml", // url where users can find more information about your algorithm
	"algo_keywords": [], // a list of keywords describing your algorithm
	"published_paper": { // if you already have a published paper for your algorithm. leave blank if not.
            "title": "",
            "url": ""
    	},
	"algo_authors": [ // a list of all the algorithm's authors
		{
			"name": "Ben Langmead",
			"email": "langmea@cs.jhu.edu", // make sure you have a gravatar (http://gravatar.com)
            "profile_picture": "", // if you don't have a gravatar, put a profile picture in algorun_info folder and refer to it here
			"personal_website": "http://www.cs.jhu.edu/~langmea/", // leave "" if not available
			"organization": "Johns Hopkins University", // leave "" if not available
			"org_website": "https://www.jhu.edu/" // leave "" if not available
		}
	],
	"algo_packager": { // the one who packaged the algorithm into AlgoRun container.
            "name": "Nicholas Monteleone",
            "email": "nicholas.monteleone@uconn.edu",
            "personal_website": "N/A",
            "profile_picture": "",
            "organization": "University of Connecticut Health Center", 
            "org_website": "http://health.uconn.edu/" 
    },
	"algo_exec": "sh bowtie2.sh", // the command to start algorithm execution. AlgoRun passes the input file as the first argument
	"algo_input_stream": "file", // "file" if the algorithm reads input from a file (filename is passed as the first command line argument), "direct" if the algorithm input is passed directly as a parameter in the command line, or "stdin" if input is passed through stdin using '<'. Default: direct
    "algo_output_stream": "result.txt", // path of the file where your algorithm outputs its results or "stdout" if your algorithm prints the results to the standard output stream. Default: stdout
	"algo_parameters": { // list all the parameters available for your algorithm. These parameters will be available for use in your algorithm as environment variables.
		"Skip": "none",
		"OnlyAlign": "no limit",
		"TrimLeft": "0",
		"TrimRight": "0",
		"PhredQuality": "33",
		"AlignN": "0",
		"AlignL": "22",
		"AlignI": "0",
		"AlignX": "500",
		"Report": "all"
	},
	"input_type": "algorun:custom", // if your algorithm is compatible with other algorithms on AlgoRun, mention the input type it accepts here. Example: "algorun:superadam". leave the default value otherwise.
    "output_type": "algorun:custom", // if your algorithm is compatible with other algorithms on AlgoRun, mention the output type it produces here. Example: "algorun:superadam". leave the default value otherwise.
	"algo_image": "" // Example: "ahosny/react". leave "" if you did not upload your algorithm to docker hub or if you do not know what docker hub is :).
}